#include<bits/stdc++.h>
using namespace std;
class Queue{
    private:
        int length=0;//length of Queue
        int *arr;
    public:
        Queue(){
            arr=new int[length];
        }
        void enqueue(int element){
            arr[length]=element;
            length++;
        }
        bool isempty(){
            return length==0;
        }
        void time_(int position){
            if(position>=length)cout<<"person out of Queue\n";
            else{
                const int value=arr[position];//person
                int count=0;//time taken for the person at position to finish buying tickets
                for (int i = 0; i <length ; i++) {
                    if(position==i){
                        count+=value;
                        arr[i]-=value;
                    }
                    else if(position>i){
                        if(value>=arr[i]){
                            count+=arr[i];
                            arr[i]=0;
                        }
                        else{
                            count+=value;
                            arr[i]-=value;
                        }
                    }
                    else{
                            if(value>arr[i]){
                                count+=arr[i];
                                arr[i]=0;
                            }
                            else{
                                count+=value-1;
                                arr[i]-=value-1;
                            }
                    }
                }
                cout<<count<<endl;
            }
    }
    void print(){
        for (int i = 0; i < length; i++) {
            cout<<arr[i]<<" ";
        }cout<<endl;
    }
};
int main(){
    Queue Q;
    cout<<"please enter sizeof Queue :";
    int n,k;cin>>n;
    int v[n];
    cout<<"please enter element of Queue"<<endl;
    for (int i = 0; i < n; i++) {
        cin>>v[i];
        Q.enqueue(v[i]);
    }
    cout<<"please enter position of person in Queue :";
    cin>>k;
    Q.time_(k);
}
